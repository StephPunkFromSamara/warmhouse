version: '3.8'


services:
  postgres:
    image: postgres:16-alpine
    container_name: smarthome-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  temperature-api:
    container_name: temperature-api
    build:
      context: ./temperature-api
      dockerfile: Dockerfile
    depends_on:
      - postgres
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      PORT: ${TEMP_API_PORT}
    ports:
      - "${TEMP_API_PORT}:8081"
    networks:
      - smarthome-network


  app:
    build:
      context: ./smart_home
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres:
        condition: service_healthy
      temperature-api:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      - TEMPERATURE_API_URL=http://temperature-api:${TEMP_API_PORT}
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network



volumes:
  pgdata:
networks:
  smarthome-network:
    driver: bridge